<<<<<<< HEAD
其他功能02
=======
功能2测试
>>>>>>> gongneng_02
在本地创建远程分支并关联起来

第一个develop是远程分支 最后一个是本地分支
 git branch --set-upstream-to=origin/develop develop

创建本地分支：
git checkout -b dev
此时仅为一个本地分支，还没有同步到远端
##git push origin dev
##git checkout master
##git branch -d dev
##git checkout -b dev origin/dev
或者直接
git push --set-upstream origin dev
推送到远端


…or create a new repository on the command line
echo "# reactNote" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/cuiJian110/reactNote.git
git push -u origin master

正在做一个功能突然又有一个新需求时候
正在分支1上开发
git status
git add .
git commit -m '描述'
git checkout dev
git pull
git checkout -b fenzhi2
完成了分支2开发
git add .
git commit -m 'commit fenzhi2'
git checkout dev
git merge fenzhi2
git checkout fenzhi1
完成了分支1开发
git add .
git commit -m 'commit fenzhi1'
git checkout dev
git merge fenzhi1
可能会有冲突
在Dev上解决冲突
然后
git add .
git commit -m 'commit fenzhi1'
git push

拉取gitlab项目
git clone 项目地址
此时一般在master分支上
git checkout -b dev
此时在本地Dev分支与远程Dev没有关连

-----
git pull origin dev
git push --set-upstream origin dev
-----
这样本地Dev与远程Dev就有联系了

拉取远程分支到当前分支
git pull origin 远程分支名字

如果远程分支：fenzhi1
现在本地git checkout fenzhi1
这个本地分支1会和远程分支1联系
代码就是远程分支1的代码
可以直接合并到Dev或者master上 


